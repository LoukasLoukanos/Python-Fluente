'''
● Mapeamento ou Dicionário ("dict") ou hash[key]=value é uma coleção de objetos armazenados 
  por uma chave e um valor, ao contrário de sequências que armazenam pela posição dos itens.


Métodos dos tipos de mapeamento dict, collections.defaultdict e collections.OrderedDict:_________________________________________________________________________________
 • O diferencial do tipo de mapeamento defaultdict é que ele é capaz de devolver valores predefinidos quando chaves são ausentes:
     (O método especial __missing__ é o mecanismo que faz defaultdict funcionar(chamando default_factory) para essa finalidade.)
 → Nota: @a: default_factory não é um método, mas um atributo de instância invocável (callable) definido pelo usuário final quando defaultdict é instanciada 
         @b: OrderedDict.popitem() remove o primeiro item inserido (FIFO); um argumento last opcional, se definido com True, remove o último item (LIFO).
╔════════════════════════════╦═════════╦═══════════════╦═══════════════╦═════════════════════════════════════════════════════════════════════════════════════════════════╗
║.........MÉTODOS............║..dict...║..defaultdict..║..OrderedDict..║.................................................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.clear()...................║....♦....║.......♦.......║.......♦.......║..Remove todos os itens..........................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.contains(k)...............║....♦....║.......♦.......║.......♦.......║..k in d.........................................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.copy()....................║....♦....║.......♦.......║.......♦.......║..Cópia rasa.....................................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d._copy_()..................║.........║.......♦.......║...............║..Suporte para copy.copy.........................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.default_factory...........║.........║.......♦.......║...............║..Função a ser chamada por __missing__ para gerar valores ausentes [ver nota @a].................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d__deliten__(k).............║....♦....║.......♦.......║.......♦.......║..del d[k] – remove item com a chave k...........................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.fronkeys(it, [initial])...║....♦....║.......♦.......║.......♦.......║..Novo mapeamento a partir das chaves do iterável, com valor inicial opcional (default é None)...║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.get(k, [default]).........║....♦....║.......♦.......║.......♦.......║..Obtém item com a chave k; devolve default ou None se estiver ausente...........................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__getiten__(k)............║....♦....║.......♦.......║.......♦.......║..d[k]-obtém item com a chave k..................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.items()...................║....♦....║.......♦.......║.......♦.......║..Obtém view sobre itens - pares (key, value)....................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__iter__()................║....♦....║.......♦.......║.......♦.......║..Obtém um iterador para chaves..................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.keys()....................║....♦....║.......♦.......║.......♦.......║..Obtém view para chaves.........................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__len__().................║....♦....║.......♦.......║.......♦.......║..len(s)-número de itens.........................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__missing__(k)............║.........║.......♦.......║...............║..Chamado quando __gettten__ não encontra a chave................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.move_to_end(k, [Last])....║.........║...............║.......♦.......║..Move k para a primeira ou para a última posição (last é True por default)......................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.pop(k, [default]).........║....♦....║.......♦.......║.......♦.......║..Remove e devolve o valor em k, ou default ou None se estiver ausente...........................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.popitem().................║....♦....║.......♦.......║.......♦.......║..Remove e devolve um item (key, value) arbitrário [ver nota @b].................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__reversed__()............║.........║...............║.......♦.......║..Obtém um iterador para chaves do último para o primeiro inserido...............................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.setdefault(k, [default])..║....♦....║.......♦.......║.......♦.......║..Se k in d, devolve d[k]; caso contrário, define d[k] default e devolve esse valor..............║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.__setitem__(k, v).........║....♦....║.......♦.......║.......♦.......║..d[k] = v – coloca v em k.......................................................................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.update(m, [**kargs])......║....♦....║.......♦.......║.......♦.......║..Atualiza d com itens do mapeamento ou do iterável de pares (key, value)........................║
╠════════════════════════════╬═════════╬═══════════════╬═══════════════╬═════════════════════════════════════════════════════════════════════════════════════════════════╣
║d.values()..................║....♦....║.......♦.......║.......♦.......║..Obtém view dos valores.........................................................................║
╚════════════════════════════╩═════════╩═══════════════╩═══════════════╩═════════════════════════════════════════════════════════════════════════════════════════════════╝
'''